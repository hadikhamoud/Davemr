trigger:
  branches:
    include:
      - main # Adjust this to your main branch name or specify a different branch

pool:
  vmImage: "ubuntu-latest" # Choose the appropriate agent pool image for your needs

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.x" # Specify the desired Python version

  - script: |
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip
      pip install -r requirements.txt
    displayName: "Install Python dependencies"

  - task: NodeTool@0
    inputs:
      versionSpec: "14.x" # Specify the desired Node.js version
    displayName: "Install Node.js"

  - script: |
      npm install
      npm run build
    displayName: "Build React application"

  - task: CopyFiles@2
    inputs:
      Contents: |
        **  # Adjust the path and pattern to match your React build output
        !**/*.map  # Exclude source map files if not needed
      TargetFolder: "$(Build.ArtifactStagingDirectory)/react-app"
    displayName: "Copy React build output"

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/react-app"
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/react-app.zip"
      replaceExistingArchive: true
    displayName: "Create React artifact"

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)/react-app.zip"
      artifactName: "react-app"
    displayName: "Publish React artifact"

  # - task: Docker@2 # Add this task if you want to build a Docker image
  #   inputs:
  #     containerRegistry: "your-container-registry-service-connection"
  #     repository: "your-docker-repository"
  #     command: "build"
  #     Dockerfile: "path/to/Dockerfile"
  #     buildContext: "$(Build.ArtifactStagingDirectory)/react-app"
  #     tags: "your-docker-image-tags"
  #   displayName: "Build Docker image"
